(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("@angular/core"), require("terminus-core"), require("terminus-settings"), require("child_process"), require("@angular/common"), require("@angular/forms"), require("assert"), (function webpackLoadOptionalExternalModule() { try { return require("fs"); } catch(e) {} }()), require("os"), require("terminus-terminal"));
	else if(typeof define === 'function' && define.amd)
		define(["@angular/core", "terminus-core", "terminus-settings", "child_process", "@angular/common", "@angular/forms", "assert", "fs", "os", "terminus-terminal"], factory);
	else {
		var a = typeof exports === 'object' ? factory(require("@angular/core"), require("terminus-core"), require("terminus-settings"), require("child_process"), require("@angular/common"), require("@angular/forms"), require("assert"), (function webpackLoadOptionalExternalModule() { try { return require("fs"); } catch(e) {} }()), require("os"), require("terminus-terminal")) : factory(root["@angular/core"], root["terminus-core"], root["terminus-settings"], root["child_process"], root["@angular/common"], root["@angular/forms"], root["assert"], root["fs"], root["os"], root["terminus-terminal"]);
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_28__, __WEBPACK_EXTERNAL_MODULE_29__, __WEBPACK_EXTERNAL_MODULE_30__, __WEBPACK_EXTERNAL_MODULE_31__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 16);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/* no static exports found */
/* exports used: NgModule, Component, Injectable */
/*!********************************!*\
  !*** external "@angular/core" ***!
  \********************************/
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_0__;

/***/ }),
/* 1 */
/* no static exports found */
/* exports used: ConfigProvider, ConfigService, SplitTabComponent, AppService, LogService */
/*!********************************!*\
  !*** external "terminus-core" ***!
  \********************************/
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_1__;

/***/ }),
/* 2 */
/* exports provided: TitleControlSettingsTabComponent */
/* exports used: TitleControlSettingsTabComponent */
/*!****************************************!*\
  !*** ./src/components/settings-tab.ts ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TitleControlSettingsTabComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(/*! @angular/core */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__angular_core__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_terminus_core__ = __webpack_require__(/*! terminus-core */ 1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_terminus_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_terminus_core__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


let TitleControlSettingsTabComponent = class TitleControlSettingsTabComponent {
    constructor(config) {
        this.config = config;
    }
    ngOnInit() { }
};
TitleControlSettingsTabComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        template: __webpack_require__(/*! ./settings-tab.pug */ 14),
        styles: []
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_terminus_core__["ConfigService"]])
], TitleControlSettingsTabComponent);



/***/ }),
/* 3 */
/* no static exports found */
/* exports used: SettingsTabProvider */
/*!************************************!*\
  !*** external "terminus-settings" ***!
  \************************************/
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_3__;

/***/ }),
/* 4 */
/* no static exports found */
/* all exports used */
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ (function(module, exports) {

module.exports = require("child_process");

/***/ }),
/* 5 */
/* exports provided: TitleControlConfigProvider */
/* exports used: TitleControlConfigProvider */
/*!***********************!*\
  !*** ./src/config.ts ***!
  \***********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_terminus_core__ = __webpack_require__(/*! terminus-core */ 1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_terminus_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_terminus_core__);

class TitleControlConfigProvider extends __WEBPACK_IMPORTED_MODULE_0_terminus_core__["ConfigProvider"] {
    constructor() {
        super(...arguments);
        this.defaults = {
            titleControl: {
                prefix: null,
                suffix: null,
                replacePattern: null,
                removePattern: null
            }
        };
    }
}
/* harmony export (immutable) */ __webpack_exports__["a"] = TitleControlConfigProvider;



/***/ }),
/* 6 */
/* exports provided: TitleControlService */
/* exports used: TitleControlService */
/*!***************************************!*\
  !*** ./src/services/title-control.ts ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TitleControlService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(/*! @angular/core */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__angular_core__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_terminus_core__ = __webpack_require__(/*! terminus-core */ 1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_terminus_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_terminus_core__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_terminus_terminal__ = __webpack_require__(/*! terminus-terminal */ 31);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_terminus_terminal___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_terminus_terminal__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__helpers_processes__ = __webpack_require__(/*! ../helpers/processes */ 15);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




const patternRegex = /(\\t|\\d|\\i|\\scmd|\\sname|\\spid|\\pid|\\cmd|\\cwd|\\e[^\s]+)/g;
let TitleControlService = class TitleControlService {
    constructor(app, config, log) {
        this.app = app;
        this.config = config;
        this.logger = log.create('title-controls');
    }
    init() {
        this.logger.debug('title-controls plugin starting up');
        this.knownTabs = new WeakMap();
        this.onTabsChange();
        this.app.tabsChanged$.subscribe(() => {
            this.onTabsChange();
        });
    }
    onTabsChange() {
        this.app.tabs.forEach((topLevelTab) => {
            let subTabs = (topLevelTab instanceof __WEBPACK_IMPORTED_MODULE_1_terminus_core__["SplitTabComponent"]) ? topLevelTab.getAllTabs() : [topLevelTab];
            for (const tab of subTabs) {
                if (tab instanceof __WEBPACK_IMPORTED_MODULE_2_terminus_terminal__["BaseTerminalTabComponent"]) {
                    if (!this.knownTabs.has(tab)) {
                        this.logger.debug(`New tab discovered: ${tab}`);
                        this.knownTabs.set(tab, new TabState(tab));
                        this.processTabTitle(tab);
                        tab.titleChange$.subscribe(() => {
                            this.processTabTitle(tab);
                        });
                    }
                }
            }
        });
    }
    processTabTitle(tab) {
        return __awaiter(this, void 0, void 0, function* () {
            const tabState = this.knownTabs.get(tab);
            if (tabState.ignoreNext && tabState.processedTitle === tab.title) {
                tabState.ignoreNext = false;
                return;
            }
            let { title: newTitle } = tab;
            const { prefix, suffix, removePattern } = this.config.store.titleControl;
            this.logger.debug(`Processing title ${tab}: "${newTitle}"`);
            tabState.actualTitle = newTitle;
            const replacePattern = this.getCompiledReplacePattern();
            if (replacePattern) {
                newTitle = yield replacePattern(tab);
            }
            if (removePattern) {
                const toRemove = removePattern.split(',');
                toRemove.forEach((toRemove) => {
                    while (newTitle.indexOf(toRemove) >= 0) {
                        newTitle = newTitle.replace(toRemove, '');
                    }
                });
            }
            if (prefix) {
                newTitle = prefix + newTitle;
            }
            if (suffix) {
                newTitle = newTitle + suffix;
            }
            if (!newTitle.trim()) {
                newTitle = 'Terminal';
            }
            tabState.ignoreNext = true;
            tabState.processedTitle = newTitle;
            this.logger.debug(`Title processed: ${tab} "${newTitle}"`);
            tab.setTitle(newTitle);
        });
    }
    getCompiledReplacePattern() {
        const { replacePattern } = this.config.store.titleControl;
        if (!replacePattern) {
            return null;
        }
        if (this.lastUsedReplacePattern !== replacePattern) {
            this.compiledReplacePattern = compileReplacePattern(replacePattern);
            this.lastUsedReplacePattern = replacePattern;
        }
        return this.compiledReplacePattern;
    }
};
TitleControlService = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_terminus_core__["AppService"],
        __WEBPACK_IMPORTED_MODULE_1_terminus_core__["ConfigService"],
        __WEBPACK_IMPORTED_MODULE_1_terminus_core__["LogService"]])
], TitleControlService);

class TabState {
    constructor(tab) {
        this.ignoreNext = false;
        this.actualTitle = tab.title;
    }
}
const compileReplacePattern = (replacePattern) => {
    const valueGetters = [];
    const rawChunks = replacePattern
        .split(patternRegex)
        .filter((chunk) => !patternRegex.test(chunk));
    patternRegex.lastIndex = 0;
    let match;
    while (match = patternRegex.exec(replacePattern)) {
        const code = match[0].slice(1);
        if (code[0] === 'e') {
            valueGetters.push(getTabEnvVar(code.slice(1)));
        }
        else {
            switch (code) {
                case 't':
                    valueGetters.push(getTabTitle);
                    break;
                // case 'd':
                // 	valueGetters.push(getTabDirectoryName);
                // 	break;
                case 'scmd':
                    valueGetters.push(getShellCommand);
                    break;
                case 'sname':
                    valueGetters.push(getShellName);
                    break;
                case 'spid':
                    valueGetters.push(getShellPid);
                    break;
                case 'pid':
                    valueGetters.push(getPid);
                    break;
                case 'cmd':
                    valueGetters.push(getCommand);
                    break;
                case 'cwd':
                    valueGetters.push(getCwd);
                    break;
                default:
                    valueGetters.push(() => match[0]);
            }
        }
    }
    patternRegex.lastIndex = 0;
    return (tab) => __awaiter(this, void 0, void 0, function* () {
        const title = [];
        for (let i = 0; i < rawChunks.length; i++) {
            title.push(rawChunks[i]);
            if (valueGetters[i]) {
                const nextValue = valueGetters[i](tab);
                if (nextValue) {
                    title.push(nextValue.then ? (yield nextValue) || '' : nextValue);
                }
            }
        }
        return title.join('');
    });
};
const getTabTitle = (tab) => {
    return tab.title;
};
const getTabEnvVar = (name) => {
    return (tab) => {
        return (tab instanceof __WEBPACK_IMPORTED_MODULE_2_terminus_terminal__["TerminalTabComponent"]) ? tab.sessionOptions.env[name] : '';
    };
};
// const getTabDirectoryName = (tab: BaseTabComponent) : string => {
// 	// TODO
// 	return '';
// };
const getShellCommand = (tab) => {
    return (tab instanceof __WEBPACK_IMPORTED_MODULE_2_terminus_terminal__["TerminalTabComponent"]) ? tab.sessionOptions.command : '';
};
const getShellName = (tab) => {
    return (tab instanceof __WEBPACK_IMPORTED_MODULE_2_terminus_terminal__["TerminalTabComponent"]) ? tab.sessionOptions.name : '';
};
const getShellPid = (tab) => {
    return (tab instanceof __WEBPACK_IMPORTED_MODULE_2_terminus_terminal__["TerminalTabComponent"]) ? (tab.session.truePID || 0).toString() : '';
};
const getLowestChildProcess = (pid) => __awaiter(this, void 0, void 0, function* () {
    let current = { pid };
    let next;
    do {
        [next] = yield __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__helpers_processes__["a" /* getChildProcesses */])(current.pid);
        if (next) {
            current = next;
        }
    } while (next);
    return current;
});
const getCommand = (tab) => __awaiter(this, void 0, void 0, function* () {
    // @ts-ignore: This property does, in fact, exist
    const pid = tab.session ? tab.session.truePID : null;
    if (pid) {
        const child = yield getLowestChildProcess(pid);
        if (child && child.pid !== pid) {
            return child.command;
        }
    }
    return '';
});
const getPid = (tab) => __awaiter(this, void 0, void 0, function* () {
    // @ts-ignore: This property does, in fact, exist
    const pid = tab.session ? tab.session.truePID : null;
    if (pid) {
        const child = yield getLowestChildProcess(pid);
        if (child && child.pid !== pid) {
            return String(child.pid);
        }
    }
    return '';
});
const getCwd = (tab) => __awaiter(this, void 0, void 0, function* () {
    const cwd = yield tab.session.getWorkingDirectory();
    if (cwd) {
        return cwd;
    }
    return '';
});


/***/ }),
/* 7 */
/* exports provided: TitleControlSettingsTabProvider */
/* exports used: TitleControlSettingsTabProvider */
/*!*************************!*\
  !*** ./src/settings.ts ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TitleControlSettingsTabProvider; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(/*! @angular/core */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__angular_core__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_terminus_settings__ = __webpack_require__(/*! terminus-settings */ 3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_terminus_settings___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_terminus_settings__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_settings_tab__ = __webpack_require__(/*! ./components/settings-tab */ 2);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



let TitleControlSettingsTabProvider = class TitleControlSettingsTabProvider extends __WEBPACK_IMPORTED_MODULE_1_terminus_settings__["SettingsTabProvider"] {
    constructor() {
        super(...arguments);
        this.id = 'title-control';
        this.title = 'Title Control';
    }
    getComponentType() {
        return __WEBPACK_IMPORTED_MODULE_2__components_settings_tab__["a" /* TitleControlSettingsTabComponent */];
    }
};
TitleControlSettingsTabProvider = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])()
], TitleControlSettingsTabProvider);



/***/ }),
/* 8 */
/* no static exports found */
/* exports used: CommonModule */
/*!**********************************!*\
  !*** external "@angular/common" ***!
  \**********************************/
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_8__;

/***/ }),
/* 9 */
/* no static exports found */
/* exports used: FormsModule */
/*!*********************************!*\
  !*** external "@angular/forms" ***!
  \*********************************/
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_9__;

/***/ }),
/* 10 */
/* no static exports found */
/* all exports used */
/*!***********************!*\
  !*** ./~/any-promise ***!
  \***********************/
/***/ (function(module, exports) {

function webpackEmptyContext(req) {
	throw new Error("Cannot find module '" + req + "'.");
}
webpackEmptyContext.keys = function() { return []; };
webpackEmptyContext.resolve = webpackEmptyContext;
module.exports = webpackEmptyContext;
webpackEmptyContext.id = 10;

/***/ }),
/* 11 */
/* no static exports found */
/* all exports used */
/*!********************************!*\
  !*** ./~/any-promise/index.js ***!
  \********************************/
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./register */ 13)().Promise


/***/ }),
/* 12 */
/* no static exports found */
/* all exports used */
/*!*********************************!*\
  !*** ./~/any-promise/loader.js ***!
  \*********************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";

    // global key for user preferred registration
var REGISTRATION_KEY = '@@any-promise/REGISTRATION',
    // Prior registration (preferred or detected)
    registered = null

/**
 * Registers the given implementation.  An implementation must
 * be registered prior to any call to `require("any-promise")`,
 * typically on application load.
 *
 * If called with no arguments, will return registration in
 * following priority:
 *
 * For Node.js:
 *
 * 1. Previous registration
 * 2. global.Promise if node.js version >= 0.12
 * 3. Auto detected promise based on first sucessful require of
 *    known promise libraries. Note this is a last resort, as the
 *    loaded library is non-deterministic. node.js >= 0.12 will
 *    always use global.Promise over this priority list.
 * 4. Throws error.
 *
 * For Browser:
 *
 * 1. Previous registration
 * 2. window.Promise
 * 3. Throws error.
 *
 * Options:
 *
 * Promise: Desired Promise constructor
 * global: Boolean - Should the registration be cached in a global variable to
 * allow cross dependency/bundle registration?  (default true)
 */
module.exports = function(root, loadImplementation){
  return function register(implementation, opts){
    implementation = implementation || null
    opts = opts || {}
    // global registration unless explicitly  {global: false} in options (default true)
    var registerGlobal = opts.global !== false;

    // load any previous global registration
    if(registered === null && registerGlobal){
      registered = root[REGISTRATION_KEY] || null
    }

    if(registered !== null
        && implementation !== null
        && registered.implementation !== implementation){
      // Throw error if attempting to redefine implementation
      throw new Error('any-promise already defined as "'+registered.implementation+
        '".  You can only register an implementation before the first '+
        ' call to require("any-promise") and an implementation cannot be changed')
    }

    if(registered === null){
      // use provided implementation
      if(implementation !== null && typeof opts.Promise !== 'undefined'){
        registered = {
          Promise: opts.Promise,
          implementation: implementation
        }
      } else {
        // require implementation if implementation is specified but not provided
        registered = loadImplementation(implementation)
      }

      if(registerGlobal){
        // register preference globally in case multiple installations
        root[REGISTRATION_KEY] = registered
      }
    }

    return registered
  }
}


/***/ }),
/* 13 */
/* no static exports found */
/* all exports used */
/*!***********************************!*\
  !*** ./~/any-promise/register.js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = __webpack_require__(/*! ./loader */ 12)(global, loadImplementation);

/**
 * Node.js version of loadImplementation.
 *
 * Requires the given implementation and returns the registration
 * containing {Promise, implementation}
 *
 * If implementation is undefined or global.Promise, loads it
 * Otherwise uses require
 */
function loadImplementation(implementation){
  var impl = null

  if(shouldPreferGlobalPromise(implementation)){
    // if no implementation or env specified use global.Promise
    impl = {
      Promise: global.Promise,
      implementation: 'global.Promise'
    }
  } else if(implementation){
    // if implementation specified, require it
    var lib = !(function webpackMissingModule() { var e = new Error("Cannot find module \".\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())
    impl = {
      Promise: lib.Promise || lib,
      implementation: implementation
    }
  } else {
    // try to auto detect implementation. This is non-deterministic
    // and should prefer other branches, but this is our last chance
    // to load something without throwing error
    impl = tryAutoDetect()
  }

  if(impl === null){
    throw new Error('Cannot find any-promise implementation nor'+
      ' global.Promise. You must install polyfill or call'+
      ' require("any-promise/register") with your preferred'+
      ' implementation, e.g. require("any-promise/register/bluebird")'+
      ' on application load prior to any require("any-promise").')
  }

  return impl
}

/**
 * Determines if the global.Promise should be preferred if an implementation
 * has not been registered.
 */
function shouldPreferGlobalPromise(implementation){
  if(implementation){
    return implementation === 'global.Promise'
  } else if(typeof global.Promise !== 'undefined'){
    // Load global promise if implementation not specified
    // Versions < 0.11 did not have global Promise
    // Do not use for version < 0.12 as version 0.11 contained buggy versions
    var version = (/v(\d+)\.(\d+)\.(\d+)/).exec(process.version)
    return !(version && +version[1] == 0 && +version[2] < 12)
  }

  // do not have global.Promise or another implementation was specified
  return false
}

/**
 * Look for common libs as last resort there is no guarantee that
 * this will return a desired implementation or even be deterministic.
 * The priority is also nearly arbitrary. We are only doing this
 * for older versions of Node.js <0.12 that do not have a reasonable
 * global.Promise implementation and we the user has not registered
 * the preference. This preserves the behavior of any-promise <= 0.1
 * and may be deprecated or removed in the future
 */
function tryAutoDetect(){
  var libs = [
      "es6-promise",
      "promise",
      "native-promise-only",
      "bluebird",
      "rsvp",
      "when",
      "q",
      "pinkie",
      "lie",
      "vow"]
  var i = 0, len = libs.length
  for(; i < len; i++){
    try {
      return loadImplementation(libs[i])
    } catch(e){}
  }
  return null
}


/***/ }),
/* 14 */
/* no static exports found */
/* all exports used */
/*!*****************************************!*\
  !*** ./src/components/settings-tab.pug ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

var req = __webpack_require__(/*! !./~/pug-loader!./src/components/settings-tab.pug */ 22);
module.exports = (req['default'] || req).apply(req, [])

/***/ }),
/* 15 */
/* exports provided: getChildProcesses */
/* exports used: getChildProcesses */
/*!**********************************!*\
  !*** ./src/helpers/processes.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_mz_child_process__ = __webpack_require__(/*! mz/child_process */ 19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_mz_child_process___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_mz_child_process__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ps_node__ = __webpack_require__(/*! ps-node */ 20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ps_node___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_ps_node__);
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};


const getChildProcesses = (ppid) => {
    return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {
        if (process.platform === 'win32') {
            try {
                const [output] = yield __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_mz_child_process__["exec"])(`wmic process where (ParentProcessId=${ppid}) get Caption,ProcessId`);
                const processes = output.toString().split('\n').slice(1);
                const childProcesses = processes.map((process) => {
                    const [command, pid] = process.trim().split(/\s+/);
                    if (!command) {
                        return null;
                    }
                    return { command, pid: parseInt(pid), ppid };
                });
                resolve(childProcesses.filter((x) => x));
            }
            catch (error) {
                reject(error);
            }
        }
        else {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_ps_node__["lookup"])({ ppid }, (err, processes) => {
                if (err) {
                    return reject(err);
                }
                resolve(processes);
            });
        }
    }));
};
/* harmony export (immutable) */ __webpack_exports__["a"] = getChildProcesses;



/***/ }),
/* 16 */
/* exports provided: default */
/* all exports used */
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(/*! @angular/core */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__angular_core__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(/*! @angular/common */ 8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__angular_common__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(/*! @angular/forms */ 9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__angular_forms__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_terminus_settings__ = __webpack_require__(/*! terminus-settings */ 3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_terminus_settings___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_terminus_settings__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_terminus_core__ = __webpack_require__(/*! terminus-core */ 1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_terminus_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_terminus_core__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_title_control__ = __webpack_require__(/*! ./services/title-control */ 6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__config__ = __webpack_require__(/*! ./config */ 5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__settings__ = __webpack_require__(/*! ./settings */ 7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__components_settings_tab__ = __webpack_require__(/*! ./components/settings-tab */ 2);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









let TitleControlModule = class TitleControlModule {
    constructor(service) {
        this.service = service;
        this.service.init();
    }
};
TitleControlModule = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
        imports: [
            __WEBPACK_IMPORTED_MODULE_1__angular_common__["CommonModule"],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormsModule"]
        ],
        providers: [
            __WEBPACK_IMPORTED_MODULE_5__services_title_control__["a" /* TitleControlService */],
            { provide: __WEBPACK_IMPORTED_MODULE_4_terminus_core__["ConfigProvider"], useClass: __WEBPACK_IMPORTED_MODULE_6__config__["a" /* TitleControlConfigProvider */], multi: true },
            { provide: __WEBPACK_IMPORTED_MODULE_3_terminus_settings__["SettingsTabProvider"], useClass: __WEBPACK_IMPORTED_MODULE_7__settings__["a" /* TitleControlSettingsTabProvider */], multi: true },
        ],
        entryComponents: [
            __WEBPACK_IMPORTED_MODULE_8__components_settings_tab__["a" /* TitleControlSettingsTabComponent */]
        ],
        declarations: [
            __WEBPACK_IMPORTED_MODULE_8__components_settings_tab__["a" /* TitleControlSettingsTabComponent */]
        ],
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_5__services_title_control__["a" /* TitleControlService */]])
], TitleControlModule);
/* harmony default export */ __webpack_exports__["default"] = (TitleControlModule);


/***/ }),
/* 17 */
/* no static exports found */
/* all exports used */
/*!*************************************!*\
  !*** ./~/connected-domain/index.js ***!
  \*************************************/
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__( /*! ./lib/connected-domain */ 18 );

/***/ }),
/* 18 */
/* no static exports found */
/* all exports used */
/*!****************************************************!*\
  !*** ./~/connected-domain/lib/connected-domain.js ***!
  \****************************************************/
/***/ (function(module, exports) {

/**
 * calculate all the connected domains based on the given two-dimensional array
 */

/**
 * @param {Array} tdArray
 * @param {Function} indicator It receive the raw point data as the first parameter and decide what kind of domain the point belongs to, it should return a string as a domain identifier.
 * @param {Boolean} hardlink If use hard link. Default to false.
 * @return {Object} [{ bounding: { w: 12, h: 19, x: 0, y: 1 }, points: [ { x: 1, y: 2, point: {} } ], identifier: 'blue', domainId: 1 } ]
 */
module.exports = function( tdArray, indicator, hardlink ){

    hardlink = hardlink || false;

    if( !tdArray ){
        throw new Error( 'tdArray must be provided' );
    }

    if( !indicator ){
        throw new Error( 'indicator must be provided' );
    }

    // clone 一份数据，因为需要对饮用进行修改，方便执行
    tdArray = JSON.parse( JSON.stringify( tdArray ) );

    // Result
    var domains = {};
    var domainUUID = 0;
    var pointsHash = {};

    // 遍历数组，划分domain

    tdArray.forEach(function( row, y ){

        row.forEach(function( colItem, x ){

            // get the current point identifier.
            var identifier = indicator( colItem, x, y );

            // get neighbours
            // Except for Undefined every data type is valid.
            var neighbours = [];

            // top neighbour
            if( tdArray[ y - 1 ] && tdArray[ y - 1 ][ x ] !== undefined ){
                neighbours.push( pointsHash[ x + '_' + ( y - 1 ) ] );
            }

            // left neighbour
            if( row[ x - 1 ] !== undefined ){
                neighbours.push( pointsHash[ ( x - 1 ) + '_' + y ] );
            }

            // soft link will treat corner link as domain link.
            if( !hardlink ){
                // top left neighbour
                if( tdArray[ y - 1 ] && tdArray[ y - 1 ][ x - 1 ] !== undefined ){
                    neighbours.push( pointsHash[ ( x - 1 ) + '_' + ( y - 1 ) ] );
                }

                // top right neighbour
                if( tdArray[ y - 1 ] && tdArray[ y - 1 ][ x + 1 ] !== undefined ){
                    neighbours.push( pointsHash[ ( x + 1 ) + '_' + ( y - 1 ) ] );
                }
            }

            if( neighbours.length ){
                var matched = false;

                neighbours.forEach(function( neighbour ){

                    if( neighbour.identifier == identifier ){

                        // If the neighbour is the first neighbour has the same identifier
                        if( !matched ){
                            addPointToDomain( colItem, x, y, neighbour.domainId );
                            matched = true;
                        }

                        // If more than one neighbour matched, check if these neighbours belong to the same domain
                        // If not, merge these domains since they connects to each other.
                        else {
                            var colItemPoint = pointsHash[ x + '_' + y ];
                            if( neighbour.domainId != colItemPoint.domainId ){
                                mergeDomains( neighbour.domainId, colItemPoint.domainId );
                            }
                        }
                    }
                });

                if( !matched ){
                    addNewDomain( colItem, x, y, identifier );
                }
            }
            else {
                addNewDomain( colItem, x, y, identifier );
            }
        });
    });

    // some summary
    var result = {
        domains: [],
        totalDomains: 0,
        groupByIdentifier: {},
        totalIdentifiers: 0
    };

    var domainId = null;
    var identifier = null;
    var domain = null;
    for( domainId in domains ){
        domain = domains[ domainId ];
        domain.bounding = calculateBounding( domain.points );
        identifier = domain.identifier;

        result.domains.push( domain );
        result.totalDomains++;

        if( !( identifier in result.groupByIdentifier ) ){
            result.groupByIdentifier[ identifier ] = [];
            result.totalIdentifiers++;
        }

        result.groupByIdentifier[ identifier ].push( domain );
    }


    function calculateBounding( points ){

        var minX = null;
        var minY = null;
        var maxX = null;
        var maxY = null;

        points.forEach(function( point ){

            if( minX === null || point.x < minX ){
                minX = point.x;
            }

            if( minY === null || point.y < minY ){
                minY = point.y;
            }

            if( maxX === null || point.x > maxX ){
                maxX = point.x;
            }

            if( maxY === null || point.y > maxY ){
                maxY = point.y;
            }
        });

        var w = maxX - minX;
        var h = maxY - minY;

        return {
            x: minX,
            y: minY,
            w: w,
            h: h
        };
    }

    /**
     *
     * @param point
     * @param x
     * @param y
     * @param identifier
     */
    function addNewDomain( point, x, y, identifier ){

        var newDomain = {
            identifier: identifier,
            domainId: ++domainUUID,
            bounding: {},
            points: []
        };

        var newPoint = {
            value: point,
            x: x,
            y: y,
            identifier: identifier,
            domainId: newDomain.domainId
        };

        pointsHash[ x + '_' + y ] = {
            value: point,
            identifier: identifier,
            domainId: newDomain.domainId
        };

        newDomain.points.push( newPoint );

        domains[ newDomain.domainId ] = newDomain;
    }

    /**
     * add a point to a existing domain, and attach properties domainId and identifier to point.
     * @param point
     * @param x
     * @param y
     * @param domainId
     */
    function addPointToDomain( point, x, y, domainId ){

        var domain = domains[ domainId ];
        var newPoint = {
            value: point,
            x: x,
            y: y,
            identifier: domain.identifier,
            domainId: domainId
        };

        pointsHash[ x + '_' + y ] = {
            value: point,
            identifier: domain.identifier,
            domainId: domainId
        };

        domain.points.push( newPoint );
    }

    /**
     * 将 domainB 合并到 domainA
     * @param domainAId
     * @param domainBId
     */
    function mergeDomains( domainAId, domainBId ){

        var domainA = domains[ domainAId ];
        var domainB = domains[ domainBId ];

        if( domainA.identifier == domainB.identifier ){
            // 更新 domainB 的domainId

            domainB.domainId = domainA.domainId;

            domainB.points.forEach(function( point ){
                point.domainId = domainA.domainId;
                pointsHash[ point.x + '_' + point.y ].domainId = domainA.domainId;
            });

            domainA.points = domainA.points.concat( domainB.points );

            // 删除domainB
            delete domains[ domainBId ];
        }
    }

    return result;
};

/***/ }),
/* 19 */
/* no static exports found */
/* exports used: exec */
/*!*******************************!*\
  !*** ./~/mz/child_process.js ***!
  \*******************************/
/***/ (function(module, exports, __webpack_require__) {


__webpack_require__(/*! thenify-all */ 26).withCallback(
  __webpack_require__(/*! child_process */ 4),
  exports, [
    'exec',
    'execFile',
  ]
)


/***/ }),
/* 20 */
/* no static exports found */
/* exports used: lookup */
/*!****************************!*\
  !*** ./~/ps-node/index.js ***!
  \****************************/
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./lib */ 21);


/***/ }),
/* 21 */
/* no static exports found */
/* all exports used */
/*!********************************!*\
  !*** ./~/ps-node/lib/index.js ***!
  \********************************/
/***/ (function(module, exports, __webpack_require__) {

var ChildProcess = __webpack_require__(/*! child_process */ 4);
var IS_WIN = process.platform === 'win32';
var TableParser = __webpack_require__(/*! table-parser */ 24);
/**
 * End of line.
 * Basically, the EOL should be:
 * - windows: \r\n
 * - *nix: \n
 * But i'm trying to get every possibilities covered.
 */
var EOL = /(\r\n)|(\n\r)|\n|\r/;
var SystemEOL = __webpack_require__(/*! os */ 30).EOL;

/**
 * Execute child process
 * @type {Function}
 * @param {String[]} args
 * @param {Function} callback
 * @param {Object=null} callback.err
 * @param {Object[]} callback.stdout
 */

var Exec = module.exports = exports = function (args, callback) {
  var spawn = ChildProcess.spawn;

  // on windows, if use ChildProcess.exec(`wmic process get`), the stdout will gives you nothing
  // that's why I use `cmd` instead
  if (IS_WIN) {

    var CMD = spawn('cmd');
    var stdout = '';
    var stderr = null;

    CMD.stdout.on('data', function (data) {
      stdout += data.toString();
    });

    CMD.stderr.on('data', function (data) {

      if (stderr === null) {
        stderr = data.toString();
      }
      else {
        stderr += data.toString();
      }
    });

    CMD.on('exit', function () {

      var beginRow;
      stdout = stdout.split(EOL);

      // Find the line index for the titles
      stdout.forEach(function (out, index) {
        if (out && typeof beginRow == 'undefined' && out.indexOf('CommandLine') === 0) {
          beginRow = index;
        }
      });

      // get rid of the start (copyright) and the end (current pwd)
      stdout.splice(stdout.length - 1, 1);
      stdout.splice(0, beginRow);

      callback(stderr, stdout.join(SystemEOL) || false);
    });

    CMD.stdin.write('wmic process get ProcessId,ParentProcessId,CommandLine \n');
    CMD.stdin.end();
  }
  else {
    if (typeof args === 'string') {
      args = args.split(/\s+/);
    }
    const child = spawn('ps', args);
    var stdout = '';
    var stderr = null;

    child.stdout.on('data', function (data) {
      stdout += data.toString();
    });

    child.stderr.on('data', function (data) {

      if (stderr === null) {
        stderr = data.toString();
      }
      else {
        stderr += data.toString();
      }
    });

    child.on('exit', function () {
      if (stderr) {
        return callback(stderr.toString());
      }
      else {
        callback(null, stdout || false);
      }
    });
  }
};

/**
 * Query Process: Focus on pid & cmd
 * @param query
 * @param {String|String[]} query.pid
 * @param {String} query.command RegExp String
 * @param {String} query.arguments RegExp String
 * @param {String|array} query.psargs
 * @param {Function} callback
 * @param {Object=null} callback.err
 * @param {Object[]} callback.processList
 * @return {Object}
 */

exports.lookup = function (query, callback) {

  /**
   * add 'lx' as default ps arguments, since the default ps output in linux like "ubuntu", wont include command arguments
   */
  var exeArgs = query.psargs || ['lx'];
  var filter = {};
  var idList;

  // Lookup by PID
  if (query.pid) {

    if (Array.isArray(query.pid)) {
      idList = query.pid;
    }
    else {
      idList = [query.pid];
    }

    // Cast all PIDs as Strings
    idList = idList.map(function (v) {
      return String(v);
    });

  }


  if (query.command) {
    filter['command'] = new RegExp(query.command, 'i');
  }

  if (query.arguments) {
    filter['arguments'] = new RegExp(query.arguments, 'i');
  }

  if (query.ppid) {
    filter['ppid'] = new RegExp(query.ppid);
  }

  return Exec(exeArgs, function (err, output) {
    if (err) {
      return callback(err);
    }
    else {
      var processList = parseGrid(output);
      var resultList = [];

      processList.forEach(function (p) {

        var flt;
        var type;
        var result = true;

        if (idList && idList.indexOf(String(p.pid)) < 0) {
          return;
        }

        for (type in filter) {
          flt = filter[type];
          result = flt.test(p[type]) ? result : false;
        }

        if (result) {
          resultList.push(p);
        }
      });

      callback(null, resultList);
    }
  });
};

/**
 * Kill process
 * @param pid
 * @param {Object|String} signal
 * @param {String} signal.signal
 * @param {number} signal.timeout
 * @param next
 */

exports.kill = function( pid, signal, next ){
  //opts are optional
  if(arguments.length == 2 && typeof signal == 'function'){
    next = signal;
    signal = undefined;
  }

  var checkTimeoutSeconds = (signal && signal.timeout) || 30;

  if (typeof signal === 'object') {
    signal = signal.signal;
  }

  try {
    process.kill(pid, signal);
  } catch(e) {
    return next && next(e);
  }

  var checkConfident = 0;
  var checkTimeoutTimer = null;
  var checkIsTimeout = false;

  function checkKilled(finishCallback) {
    exports.lookup({ pid: pid }, function(err, list) {
      if (checkIsTimeout) return;

      if (err) {
        clearTimeout(checkTimeoutTimer);
        finishCallback && finishCallback(err);
      } else if(list.length > 0) {
        checkConfident = (checkConfident - 1) || 0;
        checkKilled(finishCallback);
      } else {
        checkConfident++;
        if (checkConfident === 5) {
          clearTimeout(checkTimeoutTimer);
          finishCallback && finishCallback();
        } else {
          checkKilled(finishCallback);
        }
      }
    });
  }

  next && checkKilled(next);

  checkTimeoutTimer = next && setTimeout(function() {
    checkIsTimeout = true;
    next(new Error('Kill process timeout'));
  }, checkTimeoutSeconds * 1000);
};

/**
 * Parse the stdout into readable object.
 * @param {String} output
 */

function parseGrid(output) {
  if (!output) {
    return [];
  }
  return formatOutput(TableParser.parse(output));
}

/**
 * format the structure, extract pid, command, arguments, ppid
 * @param data
 * @return {Array}
 */

function formatOutput(data) {
  var formatedData = [];
  data.forEach(function (d) {
    var pid = ( d.PID && d.PID[0] ) || ( d.ProcessId && d.ProcessId[0] ) || undefined;
    var cmd = d.CMD || d.CommandLine || d.COMMAND || undefined;
    var ppid = ( d.PPID && d.PPID[0] ) || ( d.ParentProcessId && d.ParentProcessId[0] ) || undefined;

    if (pid && cmd) {
      var command = cmd[0];
      var args = '';

      if (cmd.length > 1) {
        args = cmd.slice(1);
      }

      formatedData.push({
        pid: pid,
        command: command,
        arguments: args,
        ppid: ppid
      });
    }
  });

  return formatedData;
}


/***/ }),
/* 22 */
/* no static exports found */
/* all exports used */
/*!********************************************************!*\
  !*** ./~/pug-loader!./src/components/settings-tab.pug ***!
  \********************************************************/
/***/ (function(module, exports, __webpack_require__) {

var pug = __webpack_require__(/*! ../../~/pug-runtime/index.js */ 23);

function template(locals) {var pug_html = "", pug_mixins = {}, pug_interp;pug_html = pug_html + "\u003Ch3\u003ETitle Control\u003C\u002Fh3\u003E\u003Cdiv class=\"row\"\u003E\u003Cdiv class=\"col-md-6\"\u003E\u003Cdiv class=\"form-group\"\u003E\u003Clabel\u003EReplace Pattern\u003C\u002Flabel\u003E\u003Cinput class=\"form-control\" type=\"text\" [(ngModel)]=\"config.store.titleControl.replacePattern\" (ngModelChange)=\"config.save()\"\u003E\u003Cp\u003EReplaces the title with a new value entirely. The escape sequences listed can be used to insert metadata into the new title.\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003Cdiv class=\"col-md-3\"\u003E\u003Cdl\u003E\u003Cdt\u003E\\t\u003C\u002Fdt\u003E\u003Cdd\u003EThe original, unprocessed title\u003C\u002Fdd\u003E\u003Cdt\u003E\\i\u003C\u002Fdt\u003E\u003Cdd\u003EThe tab ID (internal)\u003C\u002Fdd\u003E\u003Cdt\u003E\\scmd\u003C\u002Fdt\u003E\u003Cdd\u003EThe shell command (ie. powershell.exe)\u003C\u002Fdd\u003E\u003Cdt\u003E\\sname\u003C\u002Fdt\u003E\u003Cdd\u003EThe shell name (ie. Windows Powershell)\u003C\u002Fdd\u003E\u003C\u002Fdl\u003E\u003C\u002Fdiv\u003E\u003Cdiv class=\"col-md-3\"\u003E\u003Cdl\u003E\u003Cdt\u003E\\spid\u003C\u002Fdt\u003E\u003Cdd\u003EThe shell PID\u003C\u002Fdd\u003E\u003Cdt\u003E\\pid\u003C\u002Fdt\u003E\u003Cdd\u003EThe PID of the child process\u003C\u002Fdd\u003E\u003Cdt\u003E\\cmd\u003C\u002Fdt\u003E\u003Cdd\u003EThe command of the child process (ie. node.exe)\u003C\u002Fdd\u003E\u003Cdt\u003E\\cwd\u003C\u002Fdt\u003E\u003Cdd\u003EThe current working directory of the terminal\u003C\u002Fdd\u003E\u003C\u002Fdl\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003Cdiv class=\"row\"\u003E\u003Cdiv class=\"col-md-6\"\u003E\u003Cdiv class=\"form-group\"\u003E\u003Clabel\u003ERemovals\u003C\u002Flabel\u003E\u003Cinput class=\"form-control\" type=\"text\" [(ngModel)]=\"config.store.titleControl.removePattern\" (ngModelChange)=\"config.save()\"\u003E\u003Cp\u003EThese values (comma separated) will be removed from all tab titles\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003Cdiv class=\"row\"\u003E\u003Cdiv class=\"col-md-6\"\u003E\u003Cdiv class=\"form-group\"\u003E\u003Clabel\u003EPrefix\u003C\u002Flabel\u003E\u003Cinput class=\"form-control\" type=\"text\" [(ngModel)]=\"config.store.titleControl.prefix\" (ngModelChange)=\"config.save()\"\u003E\u003Cp\u003EThis value will be prefixed to all terminal tab titles\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003Cdiv class=\"row\"\u003E\u003Cdiv class=\"col-md-6\"\u003E\u003Cdiv class=\"form-group\"\u003E\u003Clabel\u003ESuffix\u003C\u002Flabel\u003E\u003Cinput class=\"form-control\" type=\"text\" [(ngModel)]=\"config.store.titleControl.suffix\" (ngModelChange)=\"config.save()\"\u003E\u003Cp\u003EThis value will be suffixed to all terminal tab titles\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";;return pug_html;};
module.exports = template;

/***/ }),
/* 23 */
/* no static exports found */
/* all exports used */
/*!********************************!*\
  !*** ./~/pug-runtime/index.js ***!
  \********************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var pug_has_own_property = Object.prototype.hasOwnProperty;

/**
 * Merge two attribute objects giving precedence
 * to values in object `b`. Classes are special-cased
 * allowing for arrays and merging/joining appropriately
 * resulting in a string.
 *
 * @param {Object} a
 * @param {Object} b
 * @return {Object} a
 * @api private
 */

exports.merge = pug_merge;
function pug_merge(a, b) {
  if (arguments.length === 1) {
    var attrs = a[0];
    for (var i = 1; i < a.length; i++) {
      attrs = pug_merge(attrs, a[i]);
    }
    return attrs;
  }

  for (var key in b) {
    if (key === 'class') {
      var valA = a[key] || [];
      a[key] = (Array.isArray(valA) ? valA : [valA]).concat(b[key] || []);
    } else if (key === 'style') {
      var valA = pug_style(a[key]);
      valA = valA && valA[valA.length - 1] !== ';' ? valA + ';' : valA;
      var valB = pug_style(b[key]);
      valB = valB && valB[valB.length - 1] !== ';' ? valB + ';' : valB;
      a[key] = valA + valB;
    } else {
      a[key] = b[key];
    }
  }

  return a;
};

/**
 * Process array, object, or string as a string of classes delimited by a space.
 *
 * If `val` is an array, all members of it and its subarrays are counted as
 * classes. If `escaping` is an array, then whether or not the item in `val` is
 * escaped depends on the corresponding item in `escaping`. If `escaping` is
 * not an array, no escaping is done.
 *
 * If `val` is an object, all the keys whose value is truthy are counted as
 * classes. No escaping is done.
 *
 * If `val` is a string, it is counted as a class. No escaping is done.
 *
 * @param {(Array.<string>|Object.<string, boolean>|string)} val
 * @param {?Array.<string>} escaping
 * @return {String}
 */
exports.classes = pug_classes;
function pug_classes_array(val, escaping) {
  var classString = '', className, padding = '', escapeEnabled = Array.isArray(escaping);
  for (var i = 0; i < val.length; i++) {
    className = pug_classes(val[i]);
    if (!className) continue;
    escapeEnabled && escaping[i] && (className = pug_escape(className));
    classString = classString + padding + className;
    padding = ' ';
  }
  return classString;
}
function pug_classes_object(val) {
  var classString = '', padding = '';
  for (var key in val) {
    if (key && val[key] && pug_has_own_property.call(val, key)) {
      classString = classString + padding + key;
      padding = ' ';
    }
  }
  return classString;
}
function pug_classes(val, escaping) {
  if (Array.isArray(val)) {
    return pug_classes_array(val, escaping);
  } else if (val && typeof val === 'object') {
    return pug_classes_object(val);
  } else {
    return val || '';
  }
}

/**
 * Convert object or string to a string of CSS styles delimited by a semicolon.
 *
 * @param {(Object.<string, string>|string)} val
 * @return {String}
 */

exports.style = pug_style;
function pug_style(val) {
  if (!val) return '';
  if (typeof val === 'object') {
    var out = '';
    for (var style in val) {
      /* istanbul ignore else */
      if (pug_has_own_property.call(val, style)) {
        out = out + style + ':' + val[style] + ';';
      }
    }
    return out;
  } else {
    return val + '';
  }
};

/**
 * Render the given attribute.
 *
 * @param {String} key
 * @param {String} val
 * @param {Boolean} escaped
 * @param {Boolean} terse
 * @return {String}
 */
exports.attr = pug_attr;
function pug_attr(key, val, escaped, terse) {
  if (val === false || val == null || !val && (key === 'class' || key === 'style')) {
    return '';
  }
  if (val === true) {
    return ' ' + (terse ? key : key + '="' + key + '"');
  }
  if (typeof val.toJSON === 'function') {
    val = val.toJSON();
  }
  if (typeof val !== 'string') {
    val = JSON.stringify(val);
    if (!escaped && val.indexOf('"') !== -1) {
      return ' ' + key + '=\'' + val.replace(/'/g, '&#39;') + '\'';
    }
  }
  if (escaped) val = pug_escape(val);
  return ' ' + key + '="' + val + '"';
};

/**
 * Render the given attributes object.
 *
 * @param {Object} obj
 * @param {Object} terse whether to use HTML5 terse boolean attributes
 * @return {String}
 */
exports.attrs = pug_attrs;
function pug_attrs(obj, terse){
  var attrs = '';

  for (var key in obj) {
    if (pug_has_own_property.call(obj, key)) {
      var val = obj[key];

      if ('class' === key) {
        val = pug_classes(val);
        attrs = pug_attr(key, val, false, terse) + attrs;
        continue;
      }
      if ('style' === key) {
        val = pug_style(val);
      }
      attrs += pug_attr(key, val, false, terse);
    }
  }

  return attrs;
};

/**
 * Escape the given string of `html`.
 *
 * @param {String} html
 * @return {String}
 * @api private
 */

var pug_match_html = /["&<>]/;
exports.escape = pug_escape;
function pug_escape(_html){
  var html = '' + _html;
  var regexResult = pug_match_html.exec(html);
  if (!regexResult) return _html;

  var result = '';
  var i, lastIndex, escape;
  for (i = regexResult.index, lastIndex = 0; i < html.length; i++) {
    switch (html.charCodeAt(i)) {
      case 34: escape = '&quot;'; break;
      case 38: escape = '&amp;'; break;
      case 60: escape = '&lt;'; break;
      case 62: escape = '&gt;'; break;
      default: continue;
    }
    if (lastIndex !== i) result += html.substring(lastIndex, i);
    lastIndex = i + 1;
    result += escape;
  }
  if (lastIndex !== i) return result + html.substring(lastIndex, i);
  else return result;
};

/**
 * Re-throw the given `err` in context to the
 * the pug in `filename` at the given `lineno`.
 *
 * @param {Error} err
 * @param {String} filename
 * @param {String} lineno
 * @param {String} str original source
 * @api private
 */

exports.rethrow = pug_rethrow;
function pug_rethrow(err, filename, lineno, str){
  if (!(err instanceof Error)) throw err;
  if ((typeof window != 'undefined' || !filename) && !str) {
    err.message += ' on line ' + lineno;
    throw err;
  }
  try {
    str = str || __webpack_require__(/*! fs */ 29).readFileSync(filename, 'utf8')
  } catch (ex) {
    pug_rethrow(err, null, lineno)
  }
  var context = 3
    , lines = str.split('\n')
    , start = Math.max(lineno - context, 0)
    , end = Math.min(lines.length, lineno + context);

  // Error context
  var context = lines.slice(start, end).map(function(line, i){
    var curr = i + start + 1;
    return (curr == lineno ? '  > ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'Pug') + ':' + lineno
    + '\n' + context + '\n\n' + err.message;
  throw err;
};


/***/ }),
/* 24 */
/* no static exports found */
/* all exports used */
/*!*********************************!*\
  !*** ./~/table-parser/index.js ***!
  \*********************************/
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__( /*! ./lib/index */ 25 );

/***/ }),
/* 25 */
/* no static exports found */
/* all exports used */
/*!*************************************!*\
  !*** ./~/table-parser/lib/index.js ***!
  \*************************************/
/***/ (function(module, exports, __webpack_require__) {

/**
 *
 * 1, define the edge ( begin and end ) of every title field
 * 2, parse all the lines except the title line, get all the connected-domains
 * 3, group all the connected-domains vertically overlapped.
 * 4, a domain group belongs to a title field if they vertically overlapped
 * 5, calculate all the edge info through the group domain and title field relations.
 */
var ConnectedDomain = __webpack_require__(/*! connected-domain */ 17);
var EMPTY_EX = /\s/;

/**
 * The output sting of cmd to parse
 * @param output
 * @returns {Array}
 */
module.exports.parse = function (output) {

  // Split into lines
  // Basically, the EOL should be:
  // - windows: \r\n
  // - *nix: \n
  // But i'm trying to get every possibilities covered.
  var linesTmp = output.split(/(\r\n)|(\n\r)|\n|\r/);

  // valid lines
  var lines = [];
  // title field info, mapped with filed name.
  var titleInfo = {};
  // the two dimensional array of the lines
  var twoDimArray = [];

  // get rid of all the empty lines.
  linesTmp.forEach(function (line) {
    if (line && line.trim()) {
      lines.push(line);
    }
  });

  // build title fields edge info
  // build two dimensional array for Connected-Domain to parse.
  lines.forEach(function (line, index) {

    // Treat the first line as the title fields line
    if (index == 0) {
      var fields = line.split(/\s+/);

      // record the beginning and ending for each field
      fields.forEach(function (field, idx) {

        if (field) {
          var info = titleInfo[field] = {};
          var indexBegin = line.indexOf(field);
          var indexEnd = indexBegin + field.length;

          if (idx == 0) {
            info.titleBegin = 0;
          }
          else {
            info.titleBegin = indexBegin;
          }

          if (idx == fields.length - 1) {
            info.titleEnd = line.length - 1;
          }
          else {
            info.titleEnd = indexEnd;
          }
        }
      });
    }
    else {
      twoDimArray[index - 1] = line.split('');
    }
  });

  // In the connected-domain aspect of view, all the blanks are connected, and all the non-blanks are connected.
  var connectedDomains = ConnectedDomain(twoDimArray, function (value) {
    if (EMPTY_EX.test(value)) {
      return -1;
    }
    else {
      return 1;
    }
  }, true);

  // all the connected domains grouped if they are vertically overlapped.
  var valuesDomainsVerticalGroups = [];

  // sore the domain list make 'x' in ascending order, it will prevent the situation that:
  // 1, two domains are not overlapped, so two groups are created for them at first
  // 2, another domain is found overlapped with both of the domains at the first step.
  // 3, In this situation the three groups have to be merged, which is complicated to implement.
  //
  // If the list is sorted in this order, this situation can't happen, because:
  // - 1, If two non-overlapped domains A, B ( the "x" value of A less than B ) are found first.
  // - 2, Since the list is in 'x' ascending order, the 'x' values of the following domains must larger or equal to the "x" of B, which means they will never overlapped with domain A.
  // - 3, So this situation can't happen.
  connectedDomains.domains.sort(function (a, b) {
    return a.bounding.x - b.bounding.x;
  });

  // Group domains vertically overlapped.
  connectedDomains.domains.forEach(function (domain) {
    // only handle un-empty domain
    if (domain.identifier === 1) {
      var overlapped = false;

      // If overlapped
      valuesDomainsVerticalGroups.forEach(function (group) {
        var bounding = domain.bounding;
        var left = bounding.x;
        var right = bounding.x + bounding.w;

        if (overlap(left, right, group.begin, group.end)) {

          overlapped = true;
          group.domains.push(domain);
          group.begin = group.begin > left ? left : group.begin;
          group.end = group.end < right ? right : group.end;
        }
      });

      // If not overlapped with any group, then create a new group
      if (!overlapped) {
        valuesDomainsVerticalGroups.push({
          begin: domain.bounding.x,
          end: domain.bounding.x + domain.bounding.w,
          domains: [domain]
        });
      }
    }
  });

  // connect all the groups to the title fields
  valuesDomainsVerticalGroups.forEach(function (group) {
    var title = null;
    var info = null;
    var overlapped = false;

    var minimunLeftDistance = null;
    var nearestLeftTitle = null;
    var distance = null;

    for (title in titleInfo) {
      info = titleInfo[title];

      /**
       * The calculation below is to find the nearest left title field to the group, in case no overlapped title field found.
       */
      if (group.begin > info.titleBegin) {
        distance = group.begin - info.titleBegin;

        if (!nearestLeftTitle || ( distance < minimunLeftDistance )) {
          nearestLeftTitle = title;
          minimunLeftDistance = distance;
        }
      }

      if (overlap(group.begin, group.end, info.titleBegin, info.titleEnd)) {

        overlapped = true;
        info.titleBegin = info.titleBegin > group.begin ? group.begin : info.titleBegin;
        info.titleEnd = info.titleEnd < group.end ? group.end : info.titleEnd;
      }
    }

    // Groups not match any title field belongs to the nearest left title field
    if (!overlapped && nearestLeftTitle) {
      var nearestTitleField = titleInfo[nearestLeftTitle];
      nearestTitleField.titleBegin = nearestTitleField.titleBegin > group.begin ? group.begin : nearestTitleField.titleBegin;
      nearestTitleField.titleEnd = nearestTitleField.titleEnd < group.end ? group.end : nearestTitleField.titleEnd;

    }
  });

  // The final result
  var result = [];

  // Since we have got all the title bounding edges, we can split all the lines into values now
  lines.forEach(function (line, index) {
    // skip the first line
    if (index > 0) {

      var lineItem = {};
      var title = null;
      var info = null;
      var value = null;
      for (title in titleInfo) {
        info = titleInfo[title];
        value = line.substring(info.titleBegin, info.titleEnd + 1);
        lineItem[title] = splitValue(value.trim());
      }

      result.push(lineItem);
    }
  });

  return result;
};

/**
 * Test if two bounding overlapped vertically
 * @param begin1
 * @param end1
 * @param begin2
 * @param end2
 * @returns {boolean}
 */
function overlap(begin1, end1, begin2, end2) {
  return ( begin1 > begin2 && begin1 < end2 ) || // 2--1--2--1 or 2--1--1--2
    ( end1 > begin2 && end1 < end2 ) ||     // 1--2--1--2 or 2--1--1--2
    ( begin1 <= begin2 && end1 >= end2 );// 21--12 or 1--2--2--1
}

/**
 * transform a string value into array. It's not just split(), but also to consider some chunk that wrapped with `"`, like below:
 *      "C:\Program Files\Google\Chrome\Application\chrome.exe" --type=renderer --lang=zh-CN, `C:\Program Files\Google\Chrome\Application\chrome.exe` should be treated as a whole,
 *      also, be careful don't be mislead by format like `--name="neekey"`, even more complicated: `--name="Neekey Ni"`
 * so, `"C:\Program Files\Internet Explorer\iexplore.exe" --name="Jack Neekey"` should split into:
 *  - C:\Program Files\Internet Explorer\iexplore.exe  // without `"`
 *  - --name="Jack Neekey"                             // with `"`
 */
function splitValue(value) {

  var match = value.match(/"/g);

  // If only one " found, then just ignore it
  if (!match || match.length == 1) {
    return value.split(/\s+/);
  }
  else {
    var result = [];
    var chunk = null;
    var ifInWrappedChunk = false;
    var ifInPureWrappedChunk = false;
    var quotaCount = 0;

    // If the match length is a even, than nothing special, if a odd, ignore the last one.
    var maxQuotaCount = match.length % 2 == 0 ? match.length : match.length - 1;

    var previousItem = null;
    var values = value.split('');

    values.forEach(function (item, index) {

      if (item !== ' ') {

        if (item === '"') {
          // quota chunk begin
          if (ifInWrappedChunk === false && quotaCount <= maxQuotaCount) {
            ifInWrappedChunk = true;
            quotaCount++;

            // pure quota chunk begin
            if (previousItem === ' ' || previousItem === null) {
              ifInPureWrappedChunk = true;
              chunk = '';
            }
            // normal continue
            else {
              chunk += item;
            }
          }
          // quota chunk end
          else if (ifInWrappedChunk === true) {
            ifInWrappedChunk = false;
            quotaCount++;

            // pure quota chunk end
            if (ifInPureWrappedChunk === true) {
              ifInPureWrappedChunk = false;
              result.push(chunk);
              chunk = null;
            }
            // normal continue
            else {
              chunk += item;
            }
          }
        }
        // normal begin
        else if (ifInWrappedChunk === false && ( previousItem === ' ' || previousItem === null )) {
          chunk = item;
        }
        // normal or quota chunk continue.
        else {
          chunk += item;
        }
      }
      // quota chunk continue, in quota chunk, blank is valid.
      else if (ifInWrappedChunk) {
        chunk += item;
      }
      // if not in quota chunk, them a blank means an end. But make sure chunk is exist, cause that could be blanks at the beginning.
      else if (chunk !== null) {
        result.push(chunk);
        chunk = null;
      }

      previousItem = item;

      // If this is the last one, but chunk is not end
      if (index == ( values.length - 1 ) && chunk !== null) {
        result.push(chunk);
        chunk = null;
      }
    });

    return result;
  }
}


/***/ }),
/* 26 */
/* no static exports found */
/* all exports used */
/*!********************************!*\
  !*** ./~/thenify-all/index.js ***!
  \********************************/
/***/ (function(module, exports, __webpack_require__) {


var thenify = __webpack_require__(/*! thenify */ 27)

module.exports = thenifyAll
thenifyAll.withCallback = withCallback
thenifyAll.thenify = thenify

/**
 * Promisifies all the selected functions in an object.
 *
 * @param {Object} source the source object for the async functions
 * @param {Object} [destination] the destination to set all the promisified methods
 * @param {Array} [methods] an array of method names of `source`
 * @return {Object}
 * @api public
 */

function thenifyAll(source, destination, methods) {
  return promisifyAll(source, destination, methods, thenify)
}

/**
 * Promisifies all the selected functions in an object and backward compatible with callback.
 *
 * @param {Object} source the source object for the async functions
 * @param {Object} [destination] the destination to set all the promisified methods
 * @param {Array} [methods] an array of method names of `source`
 * @return {Object}
 * @api public
 */

function withCallback(source, destination, methods) {
  return promisifyAll(source, destination, methods, thenify.withCallback)
}

function promisifyAll(source, destination, methods, promisify) {
  if (!destination) {
    destination = {};
    methods = Object.keys(source)
  }

  if (Array.isArray(destination)) {
    methods = destination
    destination = {}
  }

  if (!methods) {
    methods = Object.keys(source)
  }

  if (typeof source === 'function') destination = promisify(source)

  methods.forEach(function (name) {
    // promisify only if it's a function
    if (typeof source[name] === 'function') destination[name] = promisify(source[name])
  })

  // proxy the rest
  Object.keys(source).forEach(function (name) {
    if (deprecated(source, name)) return
    if (destination[name]) return
    destination[name] = source[name]
  })

  return destination
}

function deprecated(source, name) {
  var desc = Object.getOwnPropertyDescriptor(source, name)
  if (!desc || !desc.get) return false
  if (desc.get.name === 'deprecated') return true
  return false
}


/***/ }),
/* 27 */
/* no static exports found */
/* all exports used */
/*!****************************!*\
  !*** ./~/thenify/index.js ***!
  \****************************/
/***/ (function(module, exports, __webpack_require__) {


var Promise = __webpack_require__(/*! any-promise */ 11)
var assert = __webpack_require__(/*! assert */ 28)

module.exports = thenify

/**
 * Turn async functions into promises
 *
 * @param {Function} $$__fn__$$
 * @return {Function}
 * @api public
 */

function thenify($$__fn__$$, options) {
  assert(typeof $$__fn__$$ === 'function')
  return eval(createWrapper($$__fn__$$.name, options))
}

/**
 * Turn async functions into promises and backward compatible with callback
 *
 * @param {Function} $$__fn__$$
 * @return {Function}
 * @api public
 */

thenify.withCallback = function ($$__fn__$$, options) {
  assert(typeof $$__fn__$$ === 'function')
  options = options || {}
  options.withCallback = true
  if (options.multiArgs === undefined) options.multiArgs = true
  return eval(createWrapper($$__fn__$$.name, options))
}

function createCallback(resolve, reject, multiArgs) {
  return function(err, value) {
    if (err) return reject(err)
    var length = arguments.length

    if (length <= 2 || !multiArgs) return resolve(value)

    if (Array.isArray(multiArgs)) {
      var values = {}
      for (var i = 1; i < length; i++) values[multiArgs[i - 1]] = arguments[i]
      return resolve(values)
    }

    var values = new Array(length - 1)
    for (var i = 1; i < length; ++i) values[i - 1] = arguments[i]
    resolve(values)
  }
}

function createWrapper(name, options) {
  name = (name || '').replace(/\s|bound(?!$)/g, '')
  options = options || {}
  // default to true
  var multiArgs = options.multiArgs !== undefined ? options.multiArgs : true
  multiArgs = 'var multiArgs = ' + JSON.stringify(multiArgs) + '\n'

  var withCallback = options.withCallback ?
    'var lastType = typeof arguments[len - 1]\n'
    + 'if (lastType === "function") return $$__fn__$$.apply(self, arguments)\n'
   : ''

  return '(function ' + name + '() {\n'
    + 'var self = this\n'
    + 'var len = arguments.length\n'
    + multiArgs
    + withCallback
    + 'var args = new Array(len + 1)\n'
    + 'for (var i = 0; i < len; ++i) args[i] = arguments[i]\n'
    + 'var lastIndex = i\n'
    + 'return new Promise(function (resolve, reject) {\n'
      + 'args[lastIndex] = createCallback(resolve, reject, multiArgs)\n'
      + '$$__fn__$$.apply(self, args)\n'
    + '})\n'
  + '})'
}


/***/ }),
/* 28 */
/* no static exports found */
/* all exports used */
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ (function(module, exports) {

module.exports = require("assert");

/***/ }),
/* 29 */
/* no static exports found */
/* all exports used */
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ (function(module, exports) {

if(typeof __WEBPACK_EXTERNAL_MODULE_29__ === 'undefined') {var e = new Error("Cannot find module \"fs\""); e.code = 'MODULE_NOT_FOUND'; throw e;}
module.exports = __WEBPACK_EXTERNAL_MODULE_29__;

/***/ }),
/* 30 */
/* no static exports found */
/* all exports used */
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ (function(module, exports) {

module.exports = require("os");

/***/ }),
/* 31 */
/* no static exports found */
/* exports used: BaseTerminalTabComponent, TerminalTabComponent */
/*!************************************!*\
  !*** external "terminus-terminal" ***!
  \************************************/
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_31__;

/***/ })
/******/ ]);
});
//# sourceMappingURL=index.js.map