/**
 * trzsz: https://github.com/trzsz/trzsz.js
 * Copyright(c) 2023 Lonny Wong <lonnywong@qq.com>
 * @license MIT
 */
import { TrzszFileReader, TrzszFileWriter } from "./comm";
export declare class BrowserFileReader implements TrzszFileReader {
    private closed;
    private pathId;
    private relPath;
    private file;
    private pos;
    private dir;
    constructor(pathId: number, relPath: string[], file: File | null, dir: boolean);
    getPathId(): number;
    getRelPath(): string[];
    isDir(): boolean;
    getSize(): number;
    readFile(buf: ArrayBuffer): Promise<Uint8Array>;
    closeFile(): void;
}
export declare function parseFileSystemHandle(pathId: number, handle: FileSystemHandle, fileList: BrowserFileReader[], relPath: string[]): Promise<void>;
export declare function selectSendFiles(): Promise<TrzszFileReader[] | undefined>;
export declare function selectSendDirectories(): Promise<TrzszFileReader[] | undefined>;
declare class BrowserFileWriter implements TrzszFileWriter {
    private writer;
    private closed;
    private fileName;
    private localName;
    private dir;
    constructor(fileName: any, localName: string, writer: any, dir?: boolean);
    getFileName(): string;
    getLocalName(): string;
    isDir(): boolean;
    writeFile(buf: Uint8Array): Promise<void>;
    closeFile(): void;
}
export declare function selectSaveDirectory(): Promise<FileSystemDirectoryHandle | undefined>;
export declare function openSaveFile(saveParam: any, fileName: string, directory: boolean, overwrite: boolean): Promise<BrowserFileWriter>;
export {};
//# sourceMappingURL=browser.d.ts.map