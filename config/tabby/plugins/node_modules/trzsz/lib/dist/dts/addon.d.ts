/**
 * trzsz: https://github.com/trzsz/trzsz.js
 * Copyright(c) 2023 Lonny Wong <lonnywong@qq.com>
 * @license MIT
 */
import { TrzszOptions } from "./options";
import { Terminal, IDisposable, ITerminalAddon } from "xterm";
/**
 * An addon for xterm.js that supports trzsz
 */
export declare class TrzszAddon implements ITerminalAddon {
    private socket;
    private disposables;
    private options;
    private trzsz;
    /**
     * Create a TrzszAddon
     * @param {WebSocket} socket - The websocket connection.
     * @param {TrzszOptions} options - The trzsz options.
     */
    constructor(socket: WebSocket, options?: TrzszOptions);
    /**
     * Activate TrzszAddon
     * @param {Terminal} terminal - The xterm.js terminal
     */
    activate(terminal: Terminal): void;
    /**
     * Dispose TrzszAddon
     */
    dispose(): void;
    /**
     * Upload files or directories to the server.
     * @param {string[] | DataTransferItemList} items - The files or directories to upload.
     */
    uploadFiles(items: string[] | DataTransferItemList): Promise<unknown>;
    /**
     * Add websocket event handler
     * @param {WebSocket} socket - The websocket connection.
     * @param {K} type - The websocket event type.
     * @param {Function} handler - The websocket event handler.
     * @return {IDisposable} The disposable object.
     */
    protected addSocketListener<K extends keyof WebSocketEventMap>(socket: WebSocket, type: K, handler: (this: WebSocket, ev: WebSocketEventMap[K]) => any): IDisposable;
}
//# sourceMappingURL=addon.d.ts.map