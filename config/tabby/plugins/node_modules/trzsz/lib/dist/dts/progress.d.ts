/**
 * trzsz: https://github.com/trzsz/trzsz.js
 * Copyright(c) 2022 Lonny Wong <lonnywong@qq.com>
 * @license MIT
 */
import { ProgressCallback } from "./comm";
export declare function getEllipsisString(str: string, max: number): {
    sub: string;
    len: number;
};
export declare class TextProgressBar implements ProgressCallback {
    private writer;
    private lastUpdateTime;
    private columns;
    private fileCount;
    private fileIdx;
    private fileName;
    private fileSize;
    private fileStep;
    private startTime;
    private tmuxPaneColumns;
    private firstWrite;
    private speedCnt;
    private speedIdx;
    private timeArray;
    private stepArray;
    constructor(writer: (output: string) => void, columns: number, tmuxPaneColumns?: number | undefined);
    setTerminalColumns(columns: number): void;
    onNum(num: number): void;
    onName(name: string): void;
    onSize(size: number): void;
    onStep(step: number): void;
    private showProgress;
    private getSpeed;
    private getProgressText;
    private getProgressBar;
    onDone(): void;
}
//# sourceMappingURL=progress.d.ts.map